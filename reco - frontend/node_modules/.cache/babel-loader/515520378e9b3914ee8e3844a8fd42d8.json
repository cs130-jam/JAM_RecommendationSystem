{"ast":null,"code":"var _jsxFileName = \"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/dropdownField.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst DropdownField = props => {\n  _s();\n\n  const label = props.label;\n  const type = props.type;\n  const entries = props.entries;\n  const onMore = props.onMore;\n  const hasMore = props.hasMore;\n  const onSelect = props.onSelect;\n  const value = props.value;\n  const onInput = props.onInput;\n  const [focused, setFocused] = useState(false);\n  const inputElem = useRef();\n  const ulElem = useRef();\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const selectedLi = useRef();\n\n  function liProps(index) {\n    if (index === selectedIndex) {\n      return {\n        ref: selectedLi\n      };\n    } else {\n      return {};\n    }\n  }\n\n  function keyDown(e) {\n    if (e.key === \"ArrowDown\") {\n      let totalCount = entries.length;\n      if (hasMore) totalCount++;\n      setSelectedIndex(Math.min(totalCount - 1, selectedIndex + 1));\n    } else if (e.key === \"ArrowUp\") {\n      setSelectedIndex(Math.max(0, selectedIndex - 1));\n    } else if (e.key === \"Escape\") {\n      inputElem.current.blur();\n    } else if (e.key === \"Enter\") {\n      if (selectedLi.current && selectedIndex < entries.length) {\n        onSelect(entries[selectedIndex]);\n        onInput(\"\");\n        inputElem.current.blur();\n        setSelectedIndex(-1);\n      } else if (selectedIndex === entries.length) {\n        onMore();\n      } else {\n        inputElem.current.blur();\n      }\n    }\n  }\n\n  function scrollToSelected() {\n    if (!selectedLi.current) return;\n    const selected = selectedLi.current;\n    const ul = ulElem.current;\n    const visibleTop = ul.scrollTop;\n    const visibleBottom = visibleTop + ul.offsetHeight;\n    const selectedTop = selected.offsetTop;\n    const selectedBottom = selectedTop + selected.offsetHeight;\n\n    if (selectedTop < visibleTop) {\n      ul.scrollTo(0, selectedTop);\n    }\n\n    if (selectedBottom > visibleBottom) {\n      const missingBy = selectedBottom - visibleBottom;\n      ul.scrollTo(0, visibleTop + missingBy);\n    }\n  }\n\n  useEffect(scrollToSelected, [selectedIndex]);\n\n  function select(index) {\n    onSelect(entries[index]);\n    setSelectedIndex(-1);\n    onInput(\"\");\n  }\n\n  function moreSelected(e) {\n    e.preventDefault();\n    onMore();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"jam-form-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jam-form-input-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        value: value,\n        onInput: e => onInput(e.target.value),\n        onFocus: () => setFocused(true),\n        onBlur: () => setFocused(false),\n        onKeyDown: keyDown,\n        ref: inputElem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), focused ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: ulElem,\n        children: [entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onMouseDown: e => select(index),\n          className: selectedIndex === index ? \"selected\" : \"\",\n          ...liProps(index),\n          children: entry.html\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)), hasMore ? /*#__PURE__*/_createElement(\"li\", {\n          onMouseDown: moreSelected,\n          className: selectedIndex === entries.length ? \"selected\" : \"\",\n          ...liProps(entries.length),\n          key: entries.length,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Show more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 26\n        }, this)) : false]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropdownField, \"jQ/DZ+2jXfVTvLf7RP+KTEnZHT4=\");\n\n_c = DropdownField;\nexport default DropdownField;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownField\");","map":{"version":3,"sources":["/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/dropdownField.js"],"names":["useState","useRef","useEffect","DropdownField","props","label","type","entries","onMore","hasMore","onSelect","value","onInput","focused","setFocused","inputElem","ulElem","selectedIndex","setSelectedIndex","selectedLi","liProps","index","ref","keyDown","e","key","totalCount","length","Math","min","max","current","blur","scrollToSelected","selected","ul","visibleTop","scrollTop","visibleBottom","offsetHeight","selectedTop","offsetTop","selectedBottom","scrollTo","missingBy","select","moreSelected","preventDefault","target","map","entry","html"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst DropdownField = (props) => {\n    const label = props.label;\n    const type = props.type;\n    const entries = props.entries;\n    const onMore = props.onMore;\n    const hasMore = props.hasMore;\n    const onSelect = props.onSelect;\n    const value = props.value;\n    const onInput = props.onInput;\n\n    const [focused, setFocused] = useState(false);\n    const inputElem = useRef();\n    const ulElem = useRef();\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n    const selectedLi = useRef();\n\n    function liProps(index) {\n        if (index === selectedIndex) {\n            return {ref: selectedLi};\n        } else {\n            return {};\n        }\n    }\n\n    function keyDown(e) {\n        if (e.key === \"ArrowDown\") {\n            let totalCount = entries.length;\n            if (hasMore) totalCount++;\n            setSelectedIndex(Math.min(totalCount - 1, selectedIndex + 1));\n        } else if (e.key === \"ArrowUp\") {\n            setSelectedIndex(Math.max(0, selectedIndex - 1));\n        } else if (e.key === \"Escape\") {\n            inputElem.current.blur();\n        } else if (e.key === \"Enter\") {\n            if (selectedLi.current && selectedIndex < entries.length) {\n                onSelect(entries[selectedIndex]);\n                onInput(\"\");\n                inputElem.current.blur();\n                setSelectedIndex(-1);\n            } else if (selectedIndex === entries.length) {\n                onMore();\n            } else {\n                inputElem.current.blur();\n            }\n        } \n    }\n\n    function scrollToSelected() {\n        if (!selectedLi.current) return;\n\n        const selected = selectedLi.current;\n        const ul = ulElem.current;\n\n        const visibleTop = ul.scrollTop;\n        const visibleBottom = visibleTop + ul.offsetHeight;\n\n        const selectedTop = selected.offsetTop;\n        const selectedBottom = selectedTop + selected.offsetHeight;\n\n        if (selectedTop < visibleTop) {\n            ul.scrollTo(0, selectedTop);\n        }\n        if (selectedBottom > visibleBottom) {\n            const missingBy = selectedBottom - visibleBottom;\n            ul.scrollTo(0, visibleTop + missingBy);\n        }\n    }\n    useEffect(scrollToSelected, [selectedIndex]);\n\n    function select(index) {\n        onSelect(entries[index]);\n        setSelectedIndex(-1);\n        onInput(\"\");\n    }\n\n    function moreSelected(e) {\n        e.preventDefault();\n        onMore();\n    }\n\n    return (\n        <div>\n            <label className=\"jam-form-label\">{label}</label>\n            <div className=\"jam-form-input-dropdown\">\n                <input \n                    type={type} \n                    value={value} \n                    onInput={e => onInput(e.target.value)}\n                    onFocus={() => setFocused(true)}\n                    onBlur={() => setFocused(false)}\n                    onKeyDown={keyDown}\n                    ref={inputElem}\n                    />\n                {focused ? <ul ref={ulElem}>\n                    {entries.map((entry, index) => (\n                        <li onMouseDown={e => select(index)} className={selectedIndex === index ? \"selected\" : \"\"} key={index} {...liProps(index)}>{entry.html}</li>\n                    ))}\n                    {hasMore \n                        ? <li \n                            onMouseDown={moreSelected} \n                            className={selectedIndex === entries.length ? \"selected\" : \"\"} \n                            {...liProps(entries.length)}\n                            key={entries.length}\n                        ><b>Show more...</b></li> \n                        : false}\n                </ul> : <div></div>}\n            </div>\n        </div>\n    );\n}\n\nexport default DropdownField;"]},"metadata":{},"sourceType":"module"}