[{"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/index.js":"1","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/App.js":"2","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/reportWebVitals.js":"3","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/footer.js":"4","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/login.js":"5","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/contactUs.js":"6","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/aboutUs.js":"7","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/header.js":"8","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/privacyPolicy.js":"9","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/Navbar.js":"10","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/signup.js":"11","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/services/jamService.js":"12","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/useCookie.js":"13","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/inputField.js":"14","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/errorInputField.js":"15","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/dropdownField.js":"16","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/useInterval.js":"17","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/findFriend.js":"18"},{"size":547,"mtime":1637264388099,"results":"19","hashOfConfig":"20"},{"size":2368,"mtime":1637257054358,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1637103148936,"results":"22","hashOfConfig":"20"},{"size":1040,"mtime":1637103148935,"results":"23","hashOfConfig":"20"},{"size":2349,"mtime":1637103148935,"results":"24","hashOfConfig":"20"},{"size":188,"mtime":1637260633932,"results":"25","hashOfConfig":"20"},{"size":189,"mtime":1637103148935,"results":"26","hashOfConfig":"20"},{"size":264,"mtime":1637103148935,"results":"27","hashOfConfig":"20"},{"size":207,"mtime":1637103148935,"results":"28","hashOfConfig":"20"},{"size":1121,"mtime":1637103148935,"results":"29","hashOfConfig":"20"},{"size":14175,"mtime":1637103148936,"results":"30","hashOfConfig":"20"},{"size":2898,"mtime":1637103148936,"results":"31","hashOfConfig":"20"},{"size":617,"mtime":1637103148936,"results":"32","hashOfConfig":"20"},{"size":376,"mtime":1637103148936,"results":"33","hashOfConfig":"20"},{"size":605,"mtime":1637103148936,"results":"34","hashOfConfig":"20"},{"size":3776,"mtime":1637103148936,"results":"35","hashOfConfig":"20"},{"size":486,"mtime":1637103148937,"results":"36","hashOfConfig":"20"},{"size":957,"mtime":1637266582538,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m6g6bz",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/index.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/App.js",["81"],"import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './components/login';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport SignUp from './components/signup';\nimport Navbar from './components/Navbar';\nimport AboutUs from './components/aboutUs';\nimport ContactUs from './components/contactUs';\nimport FindFriend from './components/findFriend';\nimport PrivacyPolicy from './components/privacyPolicy';\nimport useCookie from './util/useCookie';\nimport { useRef } from 'react';\nimport JamAPIService from './services/jamService';\n\nconst SESSION_TOKEN_KEY = \"session-token\";\n\nconst contentStyle = {\n    minHeight: \"calc(100vh - 106px - 118px)\" // values determined from header and footer height\n};\n\nfunction App() {\n    const [sessionToken, setSessionToken, removeSessionToken] = useCookie(SESSION_TOKEN_KEY);\n    const apiService = useRef(new JamAPIService(sessionToken, removeSessionToken));\n\n    return (\n        <div >\n           <Header />\n          <div className=\"container-fluid g-0\">\n        \n            <BrowserRouter>\n                <div className=\"row\" style={contentStyle}>\n                    <Switch>\n                        <Route path=\"/login\">\n                            <Login setSessionToken={setSessionToken} apiService={apiService}/>\n                        </Route>\n                        <Route path=\"/sign-up\">\n                            <SignUp setSessionToken={setSessionToken} apiService={apiService}/>\n                        </Route>\n                        <Route path=\"/about-us\">\n                            <AboutUs />\n                        </Route>\n                        <Route path=\"/privacy-policy\">\n                            <PrivacyPolicy />\n                        </Route>\n                        <Route path=\"/contact-us\">\n                            <ContactUs />\n                        </Route>\n                        <Route path=\"/findfriend\">\n                            <FindFriend />\n                        </Route>\n                    </Switch>\n                </div>\n                </BrowserRouter>\n              \n                </div>\n                <BrowserRouter>\n  \n                <div>\n                <Footer />\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n",["82","83"],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/reportWebVitals.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/footer.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/login.js",["84"],"import React, {useState, useRef} from 'react';\nimport '../App.css';\nimport {Link} from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert'\nimport InputField from '../util/inputField';\n\nconst linkStyle = {\n    color: 'black'\n};\n\nconst linkContainer = {\n    textAlign: \"center\",\n    width: \"100%\",\n    display: \"inline-block\",\n};\n\nconst alertStyle = {\n    top: '0'\n};\n\nconst Login = (props) => {\n    const setSessionToken = props.setSessionToken;\n    const apiService = props.apiService;\n    \n    const [isInvalid, setIsInvalid] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    async function handleLogin(loginData) {\n        let response = await apiService.current.login(loginData);\n        if (response.ok) {\n            let json = await response.json();\n            setSessionToken(json.token);\n        } else {\n            let error = await response.json();\n            if (error.status === 401) {\n                setIsInvalid(true);\n            } else {\n                console.log(error);\n            }\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        handleLogin({\n            username: username,\n            password: password\n        });\n    };\n\n    function onPassword(password) {\n        setPassword(password);\n        setIsInvalid(false);\n    }\n\n    function onUsername(username) {\n        setUsername(username);\n        setIsInvalid(false);\n    }\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <form className=\"jam-form\" onSubmit={handleSubmit}>\n                {isInvalid && <Alert style={alertStyle} variant=\"danger\">Invalid Credentials! Try again</Alert>}\n                <p className=\"jam-title-text\">Login</p>\n                <InputField label=\"Username: \" type=\"text\" value={username} onInput={onUsername}/>\n                <InputField label=\"Password: \" type=\"password\" value={password} onInput={onPassword}/>\n                <div>\n                    <button className=\"jam-submit-button\" type=\"submit\">Submit</button>\n                </div>\n                <div style={linkContainer}>\n                    <Link style={linkStyle} to=\"/sign-up\">Create Account</Link>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/contactUs.js",["85"],"import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\n\nconst ContactUs = () => {\n  return (\n    <div >\n        <h1>Contct us</h1> \n    </div>\n  );\n};\n\nexport default ContactUs;\n\n\n","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/aboutUs.js",["86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst AboutUs = () => {\n    return (\n      <div >\n          <h1>About Us</h1> \n      </div>\n    );\n};\n\nexport default AboutUs;","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/header.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/privacyPolicy.js",["87"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst PrivacyPolicy = () => {\n    return (\n      <div >\n          <h1>Privacy Policy</h1> \n      </div>\n    );\n};\n\nexport default PrivacyPolicy;","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/Navbar.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/signup.js",["88","89","90","91"],"import React, {useEffect, useRef, useState} from 'react';\nimport '../App.css';\nimport InputField from '../util/inputField';\nimport useInterval from '../util/useInterval';\nimport ErrorInputField from '../util/errorInputField';\nimport DropdownField from '../util/dropdownField';\nimport { Alert } from 'react-bootstrap';\n\nconst CHECK_USERNAME_DELAY = 2000; // every 2 seconds\nconst ARTIST_SEARCH_DELAY = 1000; // every second\nconst MIN_ARTIST_SEARCH_LEN = 2;\n\nfunction matchingPrefixIgnoreCase(prefix, entries) {\n    prefix = prefix.toLowerCase();\n    return entries.filter(entry => {\n        const compareLength = Math.min(prefix.length, entry.length);\n        return prefix.substring(0, compareLength) === entry.substring(0, compareLength).toLowerCase();\n    });\n}\n\nconst instrumentsListStyle = {\n    margin: \"0px\",\n    padding: \"0px\",\n    listStyleType: \"none\"\n}\n\nconst artistContainer = {\n    height: \"60px\",\n    position: \"relative\"\n}\n\nconst artistImageStyle = {\n    width: \"60px\",\n    height: \"60px\",\n    borderRadius: \"3px\"\n}\n\nconst artistNameStyle = {\n    fontSize: \"18pt\",\n    position: \"absolute\",\n    top: \"15px\",\n    left: \"70px\"\n}\n\nconst artistButtonStyle = {\n    marginTop: \"18px\",\n    marginRight: \"-10px\"\n}\n\nconst alertStyle = {\n    top: '0'\n};\n\nconst SignUp = (props) => {\n    const setSessionToken = props.setSessionToken;\n    const apiService = props.apiService;\n    const [isValidInterests, setIsValidInterests] = useState(true); \n    const [failMessage, setFailMessage] = useState(\"\");\n\n    const [isValidUsername, setIsValidUsername] = useState(true);\n    const [username, setUsername] = useState(\"\");\n    const lastUsername = useRef(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n\n    const [instruments, setInstruments] = useState([]);\n    const [filteredInstruments, setFilteredInstruments] = useState([]);\n    const [knownInstruments, setKnownInstruments] = useState([]);\n    const [instQuery, setInstQuery] = useState(\"\");\n\n    const [cachedSearches, setCachedSearches] = useState({});\n    const [artistQueryResults, setArtistQueryResults] = useState([]);\n    const [artistQuery, setArtistQuery] = useState(\"\");\n    const [artists, setArtists] = useState([]);\n\n    const [pageIndex, setPageIndex] = useState(0);\n\n    async function checkUsername() {\n        if (username === lastUsername.current) return isValidUsername;\n\n        let response = await apiService.current.existingUser(username);\n        setIsValidUsername(response.ok);\n        lastUsername.current = username;\n        return response.ok;\n    }\n\n    useInterval(checkUsername, CHECK_USERNAME_DELAY);\n\n    async function userCredentials() {\n        if (password !== confirmPassword || password === \"\" || username === \"\") {\n            return;\n        }\n\n        let validUsername = await checkUsername();\n        if (!validUsername) {\n            return;\n        }\n\n        setPageIndex(pageIndex + 1);\n    }\n\n    function userNames() {\n        if (firstName.length === 0) {\n            return;\n        }\n\n        setPageIndex(pageIndex + 1);\n    }\n\n    function prevPage() {\n        setPageIndex(pageIndex - 1);\n    }\n\n    function getFilteredInstruments(query) {\n        return matchingPrefixIgnoreCase(query, instruments);\n    }\n    useEffect(() => {\n        setFilteredInstruments(getFilteredInstruments(instQuery));\n    }, [instQuery, instruments]);\n\n    function onInstrumentSelect(instrument) {\n        if (knownInstruments.includes(instrument.name)) return;\n        setKnownInstruments([...knownInstruments, instrument.name]);\n    }\n\n    async function getInstruments() {\n        let response = await apiService.current.getInstruments();\n        let json = await response.json();\n        setInstruments(json);\n    }\n    useEffect(() => getInstruments(), []);\n\n    function removeInstrument(instrument) {\n        setKnownInstruments(knownInstruments.filter(filteredInstrument => filteredInstrument !== instrument));\n    }\n\n    function instrumentsDone() {\n        setPageIndex(pageIndex + 1);\n    }\n\n    useInterval(() => {\n        let cached = cachedSearches[artistQuery];\n        getArtistsForQuery(artistQuery, cached ? cached.wantedCount : 10, {...cachedSearches});\n    }, ARTIST_SEARCH_DELAY);\n\n\n    async function getArtistsForQuery(query, wantedCount, cachedSearches) {\n        if (query.length <= MIN_ARTIST_SEARCH_LEN) return null;\n\n        let cached = cachedSearches[query];\n\n        if (cached && cached.wantedCount !== wantedCount) {\n            cached.wantedCount = wantedCount;\n            setCachedSearches(cachedSearches);\n        }\n        if (cached && cached.responses.length >= wantedCount) return;\n        if (cached && cached.page === cached.totalPages) return;\n\n        let page = cached ? cached.page + 1 : 1;\n        let response = await apiService.current.findArtists(query, page);\n        let json = await response.json();\n        if (!cached) {\n            cachedSearches[query] = {\n                \"page\": page,\n                \"totalPages\": json.totalPages,\n                \"responses\": json.responses,\n                \"wantedCount\": wantedCount\n            };\n            cached = cachedSearches[query];\n        } else {\n            cached.page = page;\n            cached.totalPages = json.totalPages;\n            cached.responses = [...cached.responses, json.responses];\n        }\n\n        if (cached.responses.lenth < wantedCount) {\n            getArtistsForQuery(query, wantedCount, cachedSearches);\n        } else {\n            setCachedSearches(cachedSearches);\n        }\n    }\n\n    function onArtistSelect(entry) {\n        if (artists.length >= 2) setIsValidInterests(true);\n        setArtists([...artists, entry.content]);\n    }\n\n    useEffect(() => {\n        let cached = cachedSearches[artistQuery];\n        if (!cached) {\n            setArtistQueryResults([]);\n            return;\n        }\n\n        setArtistQueryResults(cached.responses.slice(0, cached.wantedCount).map(response => {\n            return {\n                \"html\": (\n                    <div style={artistContainer}>\n                        <img style={artistImageStyle} src={response.thumb}/>\n                        <div style={artistNameStyle}>{response.name}</div>\n                    </div>\n                    ),\n                \"content\": response\n            };\n        }));\n    }, [artistQuery, cachedSearches]);\n\n    function moreEntries() {\n        let cached = cachedSearches[artistQuery];\n        if (!cached) return;\n\n        getArtistsForQuery(artistQuery, cached.wantedCount + 10, {...cachedSearches});\n    }\n\n    function removeArtist(removeEntry) {\n        setArtists(artists.filter(artist => artist.path !== removeEntry.path));\n    }\n\n    async function createAccount() {\n        if (artists.length < 3) {\n            setIsValidInterests(false);\n            return;\n        }\n\n        let locationPromise = new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => resolve(pos), error => reject(error));\n        });\n        let location = await locationPromise;\n        let response = await apiService.current.signup({\n            \"username\": username,\n            \"password\": password,\n            \"firstName\": firstName,\n            \"lastName\": lastName,\n            \"location\": {\n                \"longitude\": location.coords.longitude.toString(),\n                \"latitude\": location.coords.latitude.toString()\n            },\n            \"musicInterests\": artists.map(artist => {\n                return {\"name\": artist.name, \"path\": artist.path}\n            }),\n            \"instruments\": knownInstruments\n        });\n        if (response.ok) {\n            let json = await response.json();\n            setSessionToken(json.token);\n        } else {\n            let error = await response.json();\n            if (error.status === 400) {\n                setFailMessage(error.message);\n            } else {\n                console.log(error);\n            }\n        }\n    }\n\n    const pages = [\n        (\n            <div className=\"container-fluid g-0\">\n                <p className=\"jam-title-text\">Sign Up</p>\n                <ErrorInputField \n                    value={username} \n                    onInput={setUsername}\n                    label=\"Username: \" \n                    type=\"text\" \n                    isError={!isValidUsername || username.length === 0} \n                    message={username.length === 0 ? \"Username is required\" : \"Username taken\"}/>\n                <InputField value={password} onInput={setPassword} label=\"Password:\" type=\"password\" />\n                <ErrorInputField \n                    value={confirmPassword}\n                    onInput={setConfirmPassword}\n                    label=\"Confirm Password: \" \n                    type=\"password\" \n                    isError={password !== confirmPassword}\n                    message=\"Passwords must match\"/>\n                <div className=\"row g-0\">\n                    <div className=\"col-4\">\n                        {/* <button className=\"jam-submit-button disabled\" disabled>Back</button> */}\n                    </div>\n                    <div className=\"col-4\"></div>\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={userCredentials}>Next</button>\n                    </div>  \n                </div>\n            </div> \n        ),\n        (\n            <div className=\"container-fluid g-0\">\n                <p className=\"jam-title-text\">Sign Up</p>\n                <ErrorInputField \n                    value={firstName}\n                    onInput={setFirstName}\n                    label=\"First Name: \" \n                    type=\"text\" \n                    isError={firstName.length === 0}\n                    message=\"First name is required\"/>\n                <InputField value={lastName} onInput={setLastName} label=\"Last Name:\" type=\"text\" />\n                <div className=\"row g-0\">\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={prevPage}>Back</button>\n                    </div>\n                    <div className=\"col-4\"></div>\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={userNames}>Next</button>\n                    </div>  \n                </div>\n            </div> \n        ),\n        (\n            <div className=\"container-fluid g-0\">\n                <p className=\"jam-title-text\">Sign Up</p>\n                <DropdownField \n                    value={instQuery}\n                    onInput={setInstQuery}\n                    label=\"Add Known Instruments:\" \n                    type=\"text\"\n                    hasMore={false}\n                    onSelect={onInstrumentSelect}\n                    entries = {filteredInstruments.map(inst => {return {\n                        name: inst, \n                        html: (<span>{inst}</span>)\n                    }})}/>\n                <ul style={instrumentsListStyle}>\n                    {knownInstruments.map(instrument => (\n                        <li className=\"removable-list-entry\" key={instrument}>\n                            <span>{instrument}</span>\n                            <button onClick={e => removeInstrument(instrument)}>x</button>\n                        </li>\n                    ))}\n                </ul>\n                <div className=\"row g-0\">\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={prevPage}>Back</button>\n                    </div>\n                    <div className=\"col-4\"></div>\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={instrumentsDone}>Next</button>\n                    </div>  \n                </div>\n            </div>\n        ),\n        (\n            <div className=\"container-fluid g-0\">\n                {!isValidInterests && <Alert style={alertStyle} variant=\"danger\">Enter at least 3 artists</Alert>}\n                {failMessage.length > 0 && <Alert style={alertStyle} variant=\"danger\">{failMessage}</Alert>}\n                <p className=\"jam-title-text\">Sign Up</p>\n                <DropdownField \n                    value={artistQuery}\n                    onInput={setArtistQuery}\n                    label=\"Add Favorite Artists:\" \n                    type=\"text\"\n                    hasMore={cachedSearches[artistQuery] && cachedSearches[artistQuery].page < cachedSearches[artistQuery].totalPages}\n                    onMore={moreEntries}\n                    onSelect={onArtistSelect}\n                    entries={artistQueryResults}/>\n                <ul style={instrumentsListStyle}>\n                    {artists.map(artist => (\n                        <li className=\"removable-list-entry\" key={artist.path}>\n                            <div style={artistContainer}>\n                                <img style={artistImageStyle} src={artist.thumb}/>\n                                <div style={artistNameStyle}>{artist.name}</div>\n                                <button style={artistButtonStyle} onClick={e => removeArtist(artist)}>x</button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <div className=\"row g-0\">\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={prevPage}>Back</button>\n                    </div>\n                    <div className=\"col-4\"></div>\n                    <div className=\"col-4\">\n                        <button className=\"jam-submit-button\" onClick={createAccount}>Create Account</button>\n                    </div>  \n                </div>\n            </div> \n        )\n    ];\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"jam-form\">\n                {pages[pageIndex]}\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;","/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/services/jamService.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/useCookie.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/inputField.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/errorInputField.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/dropdownField.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/util/useInterval.js",[],"/Users/soniajaiswal/IdeaProjects/JAM/jam-frontend/src/components/findFriend.js",["92","93"],{"ruleId":"94","severity":1,"message":"95","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":14},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":1,"column":26,"nodeType":"96","messageId":"97","endLine":1,"endColumn":32},{"ruleId":"94","severity":1,"message":"103","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":122,"column":8,"nodeType":"106","endLine":122,"endColumn":32,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":134,"column":39,"nodeType":"106","endLine":134,"endColumn":41,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":202,"column":25,"nodeType":"112","endLine":202,"endColumn":77},{"ruleId":"110","severity":1,"message":"111","line":362,"column":33,"nodeType":"112","endLine":362,"endColumn":83},{"ruleId":"94","severity":1,"message":"102","line":1,"column":26,"nodeType":"96","messageId":"97","endLine":1,"endColumn":32},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'useRef' is defined but never used.","'ReactDOM' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFilteredInstruments'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'getInstruments'. Either include it or remove the dependency array.",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [getFilteredInstruments, instQuery, instruments]",{"range":"121","text":"122"},"Update the dependencies array to be: [getInstruments]",{"range":"123","text":"124"},[3491,3515],"[getFilteredInstruments, instQuery, instruments]",[3925,3927],"[getInstruments]"]